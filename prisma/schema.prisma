generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  name       String?
  created_at DateTime @default(now())
  update_at  DateTime @updatedAt
  empresa    Empresa? @relation(fields: [empresaId], references: [id])
  empresaId  Int?

  @@map("users")
}

model Cliente {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  name       String?
  status     Boolean   @default(true)
  created_at DateTime  @default(now())
  update_at  DateTime  @updatedAt
  empresaId  Int?
  Empresa    Empresa[]

  @@map("clientes")
}

model Empresa {
  id            Int         @id @default(autoincrement())
  razao_social  String?
  nome_fantasia String?
  ie            String?
  name          String?
  clientes      String?
  tipo          EmpresaType @default(JURIDICA)
  created_at    DateTime    @default(now())
  update_at     DateTime?   @updatedAt
  cliente       Cliente?    @relation(fields: [clienteId], references: [id])
  clienteId     Int?
  User          User[]
  Tecnico       Tecnico[]
  Tiket         Tiket[]

  @@map("empresas")
}

model Tecnico {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  type        String?
  name        String?
  created_at  DateTime      @default(now())
  update_at   DateTime      @updatedAt
  TecnicoTipo TecnicoTipo[]
  empresa     Empresa?      @relation(fields: [empresaId], references: [id])
  empresaId   Int?
  Tiket       Tiket[]

  @@map("tecnicos")
}

model Tiket {
  id                 Int          @id @default(autoincrement())
  problema_informado String?
  observacao         String?
  created_at         DateTime     @default(now())
  update_at          DateTime     @updatedAt
  status             TiketStatus? @relation(fields: [tiketStatusId], references: [id])
  prioridade         Prioridade?  @relation(fields: [prioridadeId], references: [id])
  empresa            Empresa?     @relation(fields: [empresaId], references: [id])
  empresaId          Int?
  tecnico            Tecnico?     @relation(fields: [tecnicoId], references: [id])
  tecnicoId          Int?
  prioridadeId       Int?
  tiketStatusId      Int?
  categoria          Categoria?   @relation(fields: [categoriaId], references: [id])
  categoriaId        Int?

  @@map("tickets")
}

model Categoria {
  id          Int           @id @default(autoincrement())
  name        String
  color       String
  subategoria Subategoria[]
  iiket       Tiket[]

  @@map("categorias")
}

model Subategoria {
  id              Int        @id @default(autoincrement())
  name            String?
  color           String?
  sub_categoria   Categoria? @relation(fields: [sub_categoriaId], references: [id])
  sub_categoriaId Int?

  @@map("subcategorias")
}

model Prioridade {
  id    Int     @id @default(autoincrement())
  name  String?
  color String?
  icon  String?
  Tiket Tiket[]

  @@map("prioridades")
}

model TiketStatus {
  id         Int      @id @default(autoincrement())
  name       String?
  created_at DateTime @default(now())
  update_at  DateTime @updatedAt
  tiket      Tiket[]

  @@map("tiket_status")
}

model TecnicoTipo {
  id        Int      @id @default(autoincrement())
  name      String?
  tecnico   Tecnico? @relation(fields: [tecnicoId], references: [id])
  tecnicoId Int?

  @@map("tecnico_tipo")
}

enum EmpresaType {
  FISICA
  JURIDICA
}
